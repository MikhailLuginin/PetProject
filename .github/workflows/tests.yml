name: Tests

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
#  base-test:
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Check out repository  # Клонирование кода репозитория в среду CI/CD
#        uses: actions/checkout@v4
#
#      - name: Set up Python  # Установка Python
#        uses: actions/setup-python@v5
#        with:
#          python-version: '3.12'  # Используем Python версии 3.12
#
#      - name: Install dependencies  # Установка зависимостей проекта
#        run: |
#          python -m pip install --upgrade pip  # Обновляем pip до последней версии
#          pip install -r requirements.txt  # Устанавливаем зависимости, указанные в requirements.txt
#
#      - name: Run Base test with pytest and generate Allure results  # Запуск теста
#        run: |
#          pytest tests/test_base --alluredir=allure-results
#          # --alluredir=allure-results сохраняет результаты в папку allure-results
#
#      - name: Generate Allure Report
#        if: always()
#        uses: simple-elf/allure-report-action@v1.7
#        with:
#          allure_results: allure-results
#          allure_report: allure-report
#          allure_history: allure-history
#
#      - name: Upload Allure results
#        if: always()
#        uses: actions/upload-artifact@v4
#        with:
#          name: allure-base
#          path: allure-results
#
#      - name: Upload .env file
#        uses: actions/upload-artifact@v4
#        with:
#          name: env-file
#          path: .env

  api-tests:
    runs-on: ubuntu-latest
    needs: base-test

    steps:
      - name: Check out repository  # Клонирование кода репозитория в среду CI/CD
        uses: actions/checkout@v4

#      - name: Download .env from previous job
#        uses: actions/download-artifact@v4
#        with:
#          name: env-file
#          path: .

      - name: Set up Python  # Установка Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'  # Используем Python версии 3.12

      - name: Install dependencies  # Установка зависимостей проекта
        run: |
          python -m pip install --upgrade pip  # Обновляем pip до последней версии
          pip install -r requirements.txt  # Устанавливаем зависимости, указанные в requirements.txt

      - name: Run Base test with pytest and generate Allure results  # Запуск теста
        run: |
          pytest tests/test_base --alluredir=allure-results
          # --alluredir=allure-results сохраняет результаты в папку allure-results

      - name: Run API tests with pytest and generate Allure results  # Запуск тестов
        run: |
          pytest tests/api_tests --alluredir=allure-results 
          # --alluredir=allure-results сохраняет результаты в папку allure-results

      - name: Generate Allure Report
        if: always()
        uses: simple-elf/allure-report-action@v1.7
        with:
          allure_results: allure-results
          allure_report: allure-report
          allure_history: allure-history

      - name: Upload Allure results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-api
          path: allure-results

  ui-tests:
    runs-on: ubuntu-latest
    needs: api-tests

    steps:
      - name: Check out repository  # Клонирование кода репозитория в среду CI/CD
        uses: actions/checkout@v4

      - name: Set up Python  # Установка Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'  # Используем Python версии 3.12

      - name: Install dependencies  # Установка зависимостей проекта
        run: |
          python -m pip install --upgrade pip  # Обновляем pip до последней версии
          pip install -r requirements.txt  # Устанавливаем зависимости, указанные в requirements.txt

      - name: Ensure browsers are installed
        run: python -m playwright install --with-deps

      - name: Run UI tests with pytest and generate Allure results  # Запуск тестов
        run: |
          pytest -s -v tests/ui_tests --alluredir=allure-results --numprocesses 2
          # --alluredir=allure-results сохраняет результаты в папку allure-results
          # --numprocesses 2 - выполняем тесты в 2 потока (ускоряет выполнение)

      - name: Generate Allure Report
        if: always()
        uses: simple-elf/allure-report-action@v1.7
        with:
          allure_results: allure-results
          allure_report: allure-report
          allure_history: allure-history

      - name: Upload Allure results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-ui
          path: allure-results

  aggregate-report:
    runs-on: ubuntu-latest
    needs: ui-tests

    steps:
      - uses: actions/checkout@v4

      - name: Download Base Allure
        uses: dawidd6/action-download-artifact@v11
        if: always()
        with:
          name: allure-base
          path: allure-results

      - name: Download API Allure
        uses: dawidd6/action-download-artifact@v11
        if: always()
        with:
          name: allure-api
          path: allure-results

      - name: Download UI Allure
        uses: dawidd6/action-download-artifact@v11
        if: always()
        with:
          name: allure-ui
          path: allure-results

      - name: Generate combined Allure Report
        uses: simple-elf/allure-report-action@v1.12
        if: always()
        with:
          allure_results: allure-results
          allure_history: allure-history

      - name: Deploy combined report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages  # Публикуем отчет в ветку gh-pages
          publish_dir: allure-history  # Папка, где находится сгенерированный отчет