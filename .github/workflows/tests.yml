name: Tests

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:

  api-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository  # Клонирование кода репозитория в среду CI/CD
        uses: actions/checkout@v4

      - name: Set up Python  # Установка Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'  # Используем Python версии 3.12

      - name: Install dependencies  # Установка зависимостей проекта
        run: |
          python -m pip install --upgrade pip  # Обновляем pip до последней версии
          pip install -r requirements.txt  # Устанавливаем зависимости, указанные в requirements.txt

      - name: Run Base test with pytest and generate Allure results  # Запуск теста
        run: |
          pytest tests/test_base --alluredir=allure-results
          # --alluredir=allure-results сохраняет результаты в папку allure-results
        continue-on-error: true

      - name: Run API tests with pytest and generate Allure results  # Запуск тестов
        run: |
          pytest tests/api_tests --alluredir=allure-results 
          # --alluredir=allure-results сохраняет результаты в папку allure-results
        continue-on-error: true

      - name: Generate Allure Report
        if: always()
        uses: simple-elf/allure-report-action@v1.7
        with:
          allure_results: allure-results
          allure_report: allure-report
          allure_history: allure-history

      - name: Upload Allure results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-api
          path: allure-results

  ui-tests:
    runs-on: ubuntu-latest
    needs: api-tests

    steps:
      - name: Check out repository  # Клонирование кода репозитория в среду CI/CD
        uses: actions/checkout@v4

      - name: Set up Python  # Установка Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'  # Используем Python версии 3.12

      - name: Install dependencies  # Установка зависимостей проекта
        run: |
          python -m pip install --upgrade pip  # Обновляем pip до последней версии
          pip install -r requirements.txt  # Устанавливаем зависимости, указанные в requirements.txt

      - name: Ensure browsers are installed
        run: python -m playwright install --with-deps

      - name: Run UI tests with pytest and generate Allure results  # Запуск тестов
        run: |
          pytest -s -v tests/ui_tests --alluredir=allure-results
          # --alluredir=allure-results сохраняет результаты в папку allure-results
        continue-on-error: true

      - name: Generate Allure Report
        if: always()
        uses: simple-elf/allure-report-action@v1.7
        with:
          allure_results: allure-results
          allure_report: allure-report
          allure_history: allure-history

      - name: Upload Allure results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-ui
          path: allure-results

  aggregate-report:
    runs-on: ubuntu-latest
    needs: ui-tests

    steps:
      - uses: actions/checkout@v4

      - name: Get Allure history
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: gh-pages
        continue-on-error: true

      - name: Download API Allure
        if: always()
        uses: actions/download-artifact@v4
        with:
          name: allure-api
          path: allure-results/api

      - name: Download UI Allure
        if: always()
        uses: actions/download-artifact@v4
        with:
          name: allure-ui
          path: allure-results/ui

      - name: Merge Allure Results
        if: always()
        run: |
          mkdir -p allure-results/merged
          cp -r allure-results/api/* allure-results/merged/ || true
          cp -r allure-results/ui/* allure-results/merged/ || true

      - name: Copy history from previous report
        if: always()
        run: |
          mkdir -p allure-results/merged/history
          cp -r gh-pages/history/* allure-results/merged/history/ || true

      - name: Generate combined Allure Report
        if: always()
        uses: simple-elf/allure-report-action@v1.12
        with:
          allure_results: allure-results/merged
          allure_report: allure-report
          allure_history: allure-history

      - name: Deploy combined report to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-report